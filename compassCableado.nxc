#define MOTORS OUT_AB
#define S1 0
#define S2 1
#define S3 2
#define S4 3

/*
 * Calculate the average of p measurements.
 */
int degrees(int p) {
   SetSensorLowspeed(S1);
   int res = 0;
   for (int i = 0 ; i < p ; i++) {
      res = res + SensorHTCompass(S1);
   }
   res = res/p;
   return res;
}

/*
 * Put the robot in the especified
 * direction.
 */
sub getPosition(int finalPosition) {
    bool go = TRUE;
    int rotate = degrees(5) - finalPosition;
    if (rotate < 0) {
       rotate = rotate + 360;
    }
    if (rotate <= 180) {
       while (go) {
          if (abs(degrees(5) - finalPosition) >= 2) {
            OnFwdSyncEx(MOTORS, 35, -100, RESET_ALL);
          } else {
            go = FALSE;
          }
       }
    } else {
       while (go) {
          if (abs(degrees(5) - finalPosition) >= 2) {
            OnFwdSyncEx(MOTORS, 35, 100, RESET_ALL);
          } else {
            Off(MOTORS);
            go = FALSE;
          }
       }
    }
}

   int north;
   int south;
   int east;
   int west;
   /*
    * Set the relative values of ours
    * cardinals points.
    */
   sub setInitialPosition() {
      /*north = degrees(10);
      south = (north + 180)%360;
      east = (north + 90)%360;
      west = (north + 270)%360;*/
      north = 246;
      south = 58;
      east = 332;
      west = 158;
   }
   
   /*task main() {
        setInitialPosition();
        SetSensorLowspeed(S1);
        while (TRUE) {
              NumOut(0, LCD_LINE7, SensorHTCompass(S1));
              NumOut(0, LCD_LINE3, north );
              NumOut(0, LCD_LINE4, south);
              NumOut(0, LCD_LINE5, east);
              NumOut(0, LCD_LINE6, west);
              Wait(1000);
              ClearScreen();
        }
        getPosition(east);
        Wait(1000);
        getPosition(north);
        Wait(1000);
        getPosition(east);
        Wait(1000);
        getPosition(west);
        Wait(1000);
        getPosition(south);
        OnFwdSyncEx(MOTORS, 35, 0, RESET_ALL);
        Wait(2000);
        Off(MOTORS);
   }      */
