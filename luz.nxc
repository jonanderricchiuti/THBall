#define SENSOR_DER IN_3
#define SENSOR_IZQ IN_4
#define Motor_Der OUT_A
#define Motor_izq OUT_B
#define Motor_Ambos OUT_AB
#define Negro 40
task main()
{
  SetSensorLight(SENSOR_DER);
  SetSensorLight(SENSOR_IZQ);
  int luz_der ;
  int luz_izq;
  while(true){
  luz_izq=Sensor(SENSOR_IZQ);
  luz_der= Sensor(SENSOR_DER);
  
  if (luz_der>Negro && luz_izq>Negro){
    OnRevSyncEx(Motor_Ambos, 50, 0, RESET_ALL);
     Wait(200);
  }
  else if (luz_der>Negro && luz_izq<Negro){
       OnFwdSyncEx(Motor_Ambos, 60, 0, RESET_ALL);
       Wait(1000);
       // girar derecha
       ResetAllTachoCounts(Motor_Ambos);
      Wait(1);
      OnRevSyncEx(Motor_Ambos, 60, -100, RESET_ALL);
      until(MotorTachoCount(Motor_Der) > 270);
       ResetAllTachoCounts(Motor_Ambos);
       Off(Motor_Ambos);

  }
  
  else if(luz_der<Negro && luz_izq>Negro){
        OnFwdSyncEx(Motor_Ambos, 60, 0, RESET_ALL);
        Wait(1000);
       // girar izquierda

       ResetAllTachoCounts(Motor_Ambos);
       Wait(1);
        OnFwdSyncEx(Motor_Ambos, 60, 100, RESET_ALL);
        until(MotorTachoCount(Motor_izq) > 350);
        ResetAllTachoCounts(Motor_Ambos);
        Off(Motor_Ambos);
  }
  
  else{
         OnFwdSyncEx(Motor_Ambos, 60, 0, RESET_ALL);
        Wait(100);
        // girar derecha
        ResetAllTachoCounts(Motor_Ambos);
        Wait(1);
        OnFwdSyncEx(Motor_Ambos, 60, -100, RESET_ALL);
        until(MotorTachoCount(Motor_Der) > 270);
        ResetAllTachoCounts(Motor_Ambos);
        Off(Motor_Ambos);
  }
  }
}
